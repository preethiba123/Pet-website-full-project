name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            preethibar/pet-website:${{ github.sha }}
            preethibar/pet-website:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig (auto-decode if base64)
        run: |
          set -euo pipefail
          if echo "${{ secrets.KUBECONFIG }}" | base64 --decode >/dev/null 2>&1; then
            echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig
          else
            echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          fi
          export KUBECONFIG="$PWD/kubeconfig"
          chmod 600 kubeconfig

      - name: Ensure manifests exist
        run: |
          if [ ! -f kubernetes/deployment.yaml ]; then
            echo "❌ deployment.yaml not found in kubernetes/ directory" >&2
            exit 1
          fi
          if [ ! -f kubernetes/service.yaml ]; then
            echo "❌ service.yaml not found in kubernetes/ directory" >&2
            exit 1
          fi

      - name: Update image in deployment.yaml
        run: |
          # replace the image line in the manifest with the exact image we just pushed
          sed -i "s|image: .*|image: preethibar/pet-website:${{ github.sha }}|" kubernetes/deployment.yaml
          echo "--- deployment after image update ---"
          cat kubernetes/deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl rollout status deployment/pet-website --timeout=60s || true